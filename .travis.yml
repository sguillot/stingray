language: python

python:
    - 2.7
    - 3.6

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds. A full list of packages
# that can be included can be found here:
#
# https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise

addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng

branches:
  only:
    - "master"

env:
    global:
        # The following versions are the 'default' for tests, unless
        # overidden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - ASTROPY_VERSION=stable
        - SETUP_CMD='test'
        - PIP_DEPENDENCIES='emcee statsmodels corner'
        # For this package-template, we include examples of Cython modules,
        # so Cython is required for testing. If your package does not include
        # Cython code, you can set CONDA_DEPENDENCIES=''
        - CONDA_DEPENDENCIES='Cython numpy scipy h5py nose matplotlib'
    matrix:
        # Make sure that egg_info works without dependencies
        - SETUP_CMD='egg_info'
        # Try all python versions with the latest numpy
        - SETUP_CMD='test --coverage'

matrix:
    fast_finish: true
    include:
        - python: 3.4
          env: SCIPY_VERSION=0.18.0 NUMPY_VERSION=1.11 ASTROPY_VERSION=1.3 PIP_DEPENDENCIES='pytest-catchlog' SETUP_CMD='test --coverage'

        - python: 3.5
          env: PIP_DEPENDENCIES='git+https://git@github.com/nanograv/pint.git jplephem emcee statsmodels corner' SETUP_CMD='test --remote-data --coverage'

        - python: 2.7
          env: PIP_DEPENDENCIES='git+https://git@github.com/nanograv/pint.git jplephem emcee statsmodels corner' SETUP_CMD='test --remote-data'

        #Try without importing h5py but importing numba
        - python: 2.7
          env: CONDA_DEPENDENCIES='Cython numpy scipy nose matplotlib numba'

        - python: 3.5
          env: CONDA_DEPENDENCIES='Cython numpy scipy nose matplotlib numba' SETUP_CMD='test --coverage'

        # Try without using corner
        - python: 3.5
          env: PIP_DEPENDENCIES='emcee statsmodels' SETUP_CMD='test --coverage'

        # Try without using emcee
        - python: 3.5
          env: PIP_DEPENDENCIES='statsmodels' SETUP_CMD='test --coverage'

        # Try without using statsmodels
        - python: 3.5
          env: PIP_DEPENDENCIES='emcee' SETUP_CMD='test --coverage'

        - python: 3.6
          env: PIP_DEPENDENCIES='nbsphinx' SETUP_CMD='build_docs -w'

        # Try older scipy versions
        - python: 2.7
          env: SCIPY_VERSION=0.16.0 NUMPY_VERSION=1.11

        # Try older scipy versions
        - python: 3.4
          env: SCIPY_VERSION=0.16.0 NUMPY_VERSION=1.11

        # Try Astropy development version
        - python: 3.5
          env: ASTROPY_VERSION=development

    allow_failures:
        # Try older scipy versions
        - python: 2.7
          env: SCIPY_VERSION=0.16.0 NUMPY_VERSION=1.11

        # Try older scipy versions
        - python: 3.4
          env: SCIPY_VERSION=0.16.0 NUMPY_VERSION=1.11

        # Try Astropy development version
        - python: 3.5
          env: ASTROPY_VERSION=development


before_install:

    # If there are matplotlib tests, comment these out to
    # Make sure that interactive matplotlib backends work
    # - export DISPLAY=:99.0
    # - sh -e /etc/init.d/xvfb start

install:

    # We now use the ci-helpers package to set up our testing environment.
    # This is done by using Miniconda and then using conda and pip to install
    # dependencies. Which dependencies are installed using conda and pip is
    # determined by the CONDA_DEPDENDENCIES and PIP_DEPENDENCIES variables,
    # which should be space-delimited lists of package names. See the README
    # in https://github.com/astropy/ci-helpers for information about the full
    # list of environment variables that can be used to customize your
    # environment. In some cases, ci-helpers may not offer enough flexibility
    # in how to install a package, in which case you can have additional
    # commands in the install: section below.

    - git clone --depth 1 git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda.sh

    # As described above, using ci-helpers, you should be able to set up an
    # environment with dependencies installed using conda and pip, but in some
    # cases this may not provide enough flexibility in how to install a
    # specific dependency (and it will not be able to install non-Python
    # dependencies). Therefore, you can also include commands below (as
    # well as at the start of the install section or in the before_install
    # section if they are needed before setting up conda) to install any
    # other dependencies.

before_script:
   - "export DISPLAY=:99.0"
   - "sh -e /etc/init.d/xvfb start"
   - sleep 3

script:
   - python setup.py $SETUP_CMD

after_success:
    # If coveralls.io is set up for this package, uncomment the line
    # below and replace "packagename" with the name of your package.
    # The coveragerc file may be customized as needed for your package.
    - if [[ $SETUP_CMD == *'--coverage'* ]]; then coveralls --rcfile='stingray/tests/coveragerc'; fi
